* Inbox
* DONE git 'er done [5/5]
CLOSED: [2025-08-26 Tue 21:54]
** DONE find the date posted along with other data
CLOSED: [2025-08-26 Tue 14:06]
:LOGBOOK:
CLOCK: [2025-08-26 Tue 09:54]--[2025-08-26 Tue 14:06] =>  4:12
:END:
[[file:/Users/oldbones/Projects/job_hunt/modules/scrapers/parser_creation.py::def find_css_selectors(self, url, html_content):]]
*** DONE database column
CLOSED: [2025-08-26 Tue 14:06]
** DONE create a score table
CLOSED: [2025-08-26 Tue 21:27]
*** columns
**** score
**** explanation
**** job_id
**** resume_id
*** KILL score as JSON
regex is good enought
CLOSED: [2025-08-26 Tue 21:27]
** KILL score_resume.py should show ascii table with list of job descriptions, prompting the use to pick and ID.  After they select via typing id then another table with resume comes up and they select id again.
Meh.
CLOSED: [2025-08-26 Tue 21:54]
** DONE [#B] create resume table
CLOSED: [2025-08-26 Tue 20:05]
this table will correlate to the score

** DONE [#B] add docker compose and potentially a Dockerfile
CLOSED: [2025-08-26 Tue 20:05]
[[file:/Users/oldbones/Projects/job_hunt/notes.org]]
* DONE Some lib files don't need the command line. identify and remove CLOSED: [2025-08-26 Tue 21:59]

[[file:/Users/oldbones/Projects/job_hunt/lib/parsers/generic.py::"description": description,]]
* DONE Make a library that spins up a playwright browser. lib/browser.py
CLOSED: [2025-01-27 Mon]
* DONE make a file called cli/extract_job.py
CLOSED: [2025-01-27 Mon]
* DONE cli/extract_job.py spins up the playwrite browser
CLOSED: [2025-01-27 Mon]
* DONE cli/extract_job.py passes in url, username, password  client into the lib/browser.py instantiation
CLOSED: [2025-01-27 Mon]
* DONE browser goes to url and if it does not 301/302 it returns the DOM as a string
CLOSED: [2025-01-27 Mon]
* DONE finish linked in test by moving into a service.
CLOSED: [2025-09-03 Wed 20:33]
* DONE Define a service
CLOSED: [2025-09-03 Wed 20:33]
Service instantiates a URL of a job posting
it will attempt to visit the url and get the contents
if it is behind a login, it will log in.
if the actual job application/description is somewhere else, it will track that down as well
** DONE It has an additional service of allowing css selectors to circumvent having to go to chatgpt all the time
CLOSED: [2025-09-03 Wed 20:32]
* DONE The easy way to record a job posting
CLOSED: [2025-09-03 Wed 20:31]
navigate to the unrestricted job
scrape then parse, alternatively use css selectors
* DONE cli to score against a resume id (default id=1) and job id passed in to args
CLOSED: [2025-09-08 Mon]
* DONE cli to score a job id against all the resumes for a given user
CLOSED: [2025-09-08 Mon]
* DONE cli is able to take a resume path and convert it to standard orgmode format and save to db
CLOSED: [2025-09-07 Sun 11:51]
* DONE cli has a command that takes a job id and makes a potential resume summary filling in gaps.
CLOSED: [2025-09-08 Mon]
* DONE move job table to job_post table
CLOSED: [2025-09-07 Sun 11:52]
* IDEA experiment with AI filling out forms
* TODO make storage of resume in org format
it will be easier for me to decern
* TODO
